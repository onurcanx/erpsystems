{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\onur_\\\\Desktop\\\\ERP2\\\\frontend\\\\src\\\\context\\\\NotificationContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext();\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [criticalCount, setCriticalCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const fetchNotifications = useCallback(async () => {\n    setLoading(true);\n    const token = localStorage.getItem('token');\n    try {\n      const res = await axios.get('http://localhost:5000/products/stock-panel-stats', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setCriticalCount(res.data.criticalCount);\n      if (res.data.criticalCount > 0) {\n        setNotifications([{\n          id: Date.now(),\n          message: `${res.data.criticalCount} ürün kritik stok seviyesinde!`\n        }]);\n      } else {\n        setNotifications([]);\n      }\n    } catch (e) {\n      setCriticalCount(0);\n      setNotifications([]);\n    }\n    setLoading(false);\n  }, []);\n\n  // Stok hareketi sonrası çağrılacak fonksiyon\n  const refreshNotifications = () => {\n    fetchNotifications();\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: {\n      notifications,\n      criticalCount,\n      loading,\n      fetchNotifications,\n      refreshNotifications\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationProvider, \"z0UI1heftr1/EFeGI19WsOWvbr8=\");\n_c = NotificationProvider;\nexport const useNotification = () => {\n  _s2();\n  return useContext(NotificationContext);\n};\n_s2(useNotification, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","axios","jsxDEV","_jsxDEV","NotificationContext","NotificationProvider","children","_s","notifications","setNotifications","criticalCount","setCriticalCount","loading","setLoading","fetchNotifications","token","localStorage","getItem","res","get","headers","Authorization","data","id","Date","now","message","e","refreshNotifications","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useNotification","_s2","$RefreshReg$"],"sources":["C:/Users/onur_/Desktop/ERP2/frontend/src/context/NotificationContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst NotificationContext = createContext();\r\n\r\nexport const NotificationProvider = ({ children }) => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [criticalCount, setCriticalCount] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchNotifications = useCallback(async () => {\r\n    setLoading(true);\r\n    const token = localStorage.getItem('token');\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/products/stock-panel-stats', {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setCriticalCount(res.data.criticalCount);\r\n      if (res.data.criticalCount > 0) {\r\n        setNotifications([\r\n          {\r\n            id: Date.now(),\r\n            message: `${res.data.criticalCount} ürün kritik stok seviyesinde!`,\r\n          },\r\n        ]);\r\n      } else {\r\n        setNotifications([]);\r\n      }\r\n    } catch (e) {\r\n      setCriticalCount(0);\r\n      setNotifications([]);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Stok hareketi sonrası çağrılacak fonksiyon\r\n  const refreshNotifications = () => {\r\n    fetchNotifications();\r\n  };\r\n\r\n  return (\r\n    <NotificationContext.Provider value={{\r\n      notifications,\r\n      criticalCount,\r\n      loading,\r\n      fetchNotifications,\r\n      refreshNotifications\r\n    }}>\r\n      {children}\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useNotification = () => useContext(NotificationContext); "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,mBAAmB,gBAAGP,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMQ,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMe,kBAAkB,GAAGd,WAAW,CAAC,YAAY;IACjDa,UAAU,CAAC,IAAI,CAAC;IAChB,MAAME,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,kDAAkD,EAAE;QAC9EC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAC9C,CAAC,CAAC;MACFJ,gBAAgB,CAACO,GAAG,CAACI,IAAI,CAACZ,aAAa,CAAC;MACxC,IAAIQ,GAAG,CAACI,IAAI,CAACZ,aAAa,GAAG,CAAC,EAAE;QAC9BD,gBAAgB,CAAC,CACf;UACEc,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;UACdC,OAAO,EAAE,GAAGR,GAAG,CAACI,IAAI,CAACZ,aAAa;QACpC,CAAC,CACF,CAAC;MACJ,CAAC,MAAM;QACLD,gBAAgB,CAAC,EAAE,CAAC;MACtB;IACF,CAAC,CAAC,OAAOkB,CAAC,EAAE;MACVhB,gBAAgB,CAAC,CAAC,CAAC;MACnBF,gBAAgB,CAAC,EAAE,CAAC;IACtB;IACAI,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMe,oBAAoB,GAAGA,CAAA,KAAM;IACjCd,kBAAkB,CAAC,CAAC;EACtB,CAAC;EAED,oBACEX,OAAA,CAACC,mBAAmB,CAACyB,QAAQ;IAACC,KAAK,EAAE;MACnCtB,aAAa;MACbE,aAAa;MACbE,OAAO;MACPE,kBAAkB;MAClBc;IACF,CAAE;IAAAtB,QAAA,EACCA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACmB,CAAC;AAEnC,CAAC;AAAC3B,EAAA,CA9CWF,oBAAoB;AAAA8B,EAAA,GAApB9B,oBAAoB;AAgDjC,OAAO,MAAM+B,eAAe,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvC,UAAU,CAACM,mBAAmB,CAAC;AAAA;AAACiC,GAAA,CAAxDD,eAAe;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}